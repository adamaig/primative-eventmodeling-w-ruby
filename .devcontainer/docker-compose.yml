
services:
  # Update this to the name of the service you want to work with in your docker-compose.yml file
  ruby-event-modeling:
    # image: ruby:latest
    # Uncomment if you want to override the service's Dockerfile to one in the .devcontainer 
    # folder. Note that the path of the Dockerfile and context is relative to the *primary* 
    # docker-compose.yml file (the first in the devcontainer.json "dockerComposeFile"
    # array). The sample below assumes your primary file is in the root of your project.
    #
    build:
      context: ..
      dockerfile: .devcontainer/Dockerfile

    volumes:
      # Update this to wherever you want VS Code to mount the folder of your project
      - ..:/workspace:cached
      - gem-cache:/usr/local/bundle

    # Uncomment the next four lines if you will use a ptrace-based debugger like C++, Go, and Rust.
    # cap_add:
    #   - SYS_PTRACE
    # security_opt:
    #   - seccomp:unconfined

    # Overrides default command so things don't shut down after the process ends.
    command: sleep infinity

  redis:
    image: redis:latest
    # only expose to other services in the docker network by default
    expose:
      - 6379

  postgres:
    image: postgres:latest
    environment:
      POSTGRES_USER: devuser
      POSTGRES_PASSWORD: devpassword
      POSTGRES_DB: devdb
    # only expose to other services in the docker network by default
    expose:
      - 5432
    volumes:
      - pgdata-event-modeling:/var/lib/postgresql/data

volumes:
  pgdata-event-modeling:
    name: pgdata-event-modeling
  gem-cache:
    name: gem-cache
